# Consul Helm Chart Values for Service Mesh Demo
# This configuration enables Consul Connect service mesh with:
# - Automatic sidecar injection
# - mTLS between services
# - Support for custom Envoy WASM filters

global:
  name: consul
  datacenter: dc1

  # Enable Consul Enterprise features (set to false for OSS)
  enableConsulNamespaces: false

  # Image configuration
  image: "hashicorp/consul:1.17.0"
  imageK8S: "hashicorp/consul-k8s-control-plane:1.3.0"

  # Metrics configuration (optional)
  metrics:
    enabled: true
    enableAgentMetrics: true
    enableGatewayMetrics: true

  # TLS configuration for Consul internal communication
  tls:
    enabled: true
    enableAutoEncrypt: true

# Consul server configuration
server:
  enabled: true
  replicas: 1  # For production, use 3 or 5

  # Storage configuration
  storage: 10Gi
  storageClass: standard

  # Resource limits
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  # Enable Consul UI
  ui:
    enabled: true
    service:
      type: LoadBalancer  # Change to ClusterIP for production

# Consul client configuration (runs on every node)
client:
  enabled: true

  # Resource limits for clients
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

# Connect (Service Mesh) configuration
connectInject:
  enabled: true

  # Automatically inject Consul Connect sidecars
  default: false  # Opt-in via annotations

  # Envoy proxy configuration
  envoyExtraArgs: "--log-level debug"

  # Sidecar proxy resource limits
  sidecarProxy:
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"

  # Init container resources
  initContainer:
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"

  # Enable central config
  centralConfig:
    enabled: true
    defaultProtocol: "http"

    # Proxy defaults - applies to all services
    proxyDefaults: |
      {
        "protocol": "http",
        "config": {
          "envoy_extra_static_clusters_json": "[
            {
              \"name\": \"jwt-vending-service\",
              \"type\": \"STRICT_DNS\",
              \"connect_timeout\": \"5s\",
              \"lb_policy\": \"ROUND_ROBIN\",
              \"load_assignment\": {
                \"cluster_name\": \"jwt-vending-service\",
                \"endpoints\": [{
                  \"lb_endpoints\": [{
                    \"endpoint\": {
                      \"address\": {
                        \"socket_address\": {
                          \"address\": \"jwt-vending-service.default.svc.cluster.local\",
                          \"port_value\": 8081
                        }
                      }
                    }
                  }]
                }]
              }
            },
            {
              \"name\": \"sgnl-pdp-service\",
              \"type\": \"STRICT_DNS\",
              \"connect_timeout\": \"5s\",
              \"lb_policy\": \"ROUND_ROBIN\",
              \"load_assignment\": {
                \"cluster_name\": \"sgnl-pdp-service\",
                \"endpoints\": [{
                  \"lb_endpoints\": [{
                    \"endpoint\": {
                      \"address\": {
                        \"socket_address\": {
                          \"address\": \"sgnl-pdp-service.default.svc.cluster.local\",
                          \"port_value\": 8082
                        }
                      }
                    }
                  }]
                }]
              }
            }
          ]"
        }
      }

# ACL configuration (optional but recommended for production)
# For this demo, we'll keep ACLs disabled for simplicity
acls:
  manageSystemACLs: false

# DNS configuration
dns:
  enabled: true
  enableRedirection: true

# Ingress gateway (optional)
ingressGateways:
  enabled: false

# Terminating gateway (optional)
terminatingGateways:
  enabled: false

# Mesh gateway for multi-cluster (optional)
meshGateway:
  enabled: false